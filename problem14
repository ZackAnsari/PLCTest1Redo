alphabet = {'a', 'b', 'c', 'd'}

# Define the DFA transitions
transitions = {
    0: {'a': 1, 'b': 2, 'c': 3, 'd': 4},
    1: {'a': 0, 'b': 3, 'c': 4, 'd': 2},
    2: {'a': 3, 'b': 0, 'c': 2, 'd': 4},
    3: {'a': 2, 'b': 1, 'c': 3, 'd': 0},
    4: {'a': 4, 'b': 3, 'c': 0, 'd': 1},
    }

# Define the accepting states
accepting_states = {1, 3}

# Define the start state
start_state = 0

def accepts(string):
    # Start in the initial state
    current_state = start_state
    
    # Traverse the DFA for each character in the string
    for char in string:
        if char not in alphabet:
            return False
        current_state = transitions[current_state][char]
    
    # Return True if the current state is an accepting state
    return current_state in accepting_states
